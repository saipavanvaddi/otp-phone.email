# Generated by Django 4.2.8 on 2025-03-19 16:44

from django.db import migrations


def assign_apartments_to_flats(apps, schema_editor):
    Apartment = apps.get_model('verify', 'Apartment')
    ApartmentFlat = apps.get_model('verify', 'ApartmentFlat')
    
    # Get the first apartment (Green Valley Heights)
    try:
        default_apartment = Apartment.objects.get(name="Green Valley Heights")
        
        # Assign this apartment to all flats without an apartment
        flats_without_apartment = ApartmentFlat.objects.filter(apartment__isnull=True)
        
        for flat in flats_without_apartment:
            flat.apartment = default_apartment
            # Assign a block based on flat number
            # For example, if flat_number starts with a digit, use that as block
            if flat.flat_number and flat.flat_number[0].isdigit():
                flat.block = "Block " + flat.flat_number[0]
            else:
                flat.block = "Block A"
            flat.save()
            
        print(f"Assigned {default_apartment.name} to {flats_without_apartment.count()} apartment flats")
    except Apartment.DoesNotExist:
        print("Default apartment 'Green Valley Heights' not found")


def reverse_apartment_assignment(apps, schema_editor):
    ApartmentFlat = apps.get_model('verify', 'ApartmentFlat')
    
    # Set apartment to null for all flats
    ApartmentFlat.objects.all().update(apartment=None, block=None)


class Migration(migrations.Migration):

    dependencies = [
        ('verify', '0010_add_default_apartments'),
    ]

    operations = [
        migrations.RunPython(assign_apartments_to_flats, reverse_apartment_assignment),
    ]
