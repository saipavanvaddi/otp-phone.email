# Generated by Django 4.2.8 on 2025-03-19 17:23

from django.db import migrations
from django.contrib.auth.hashers import make_password

def add_flats_to_apartments(apps, schema_editor):
    # Get the Apartment and ApartmentFlat models
    Apartment = apps.get_model('verify', 'Apartment')
    ApartmentFlat = apps.get_model('verify', 'ApartmentFlat')
    
    # Get apartments 5 and 6
    try:
        apartment5 = Apartment.objects.get(id=5)  # Riverside Towers
        apartment6 = Apartment.objects.get(id=6)  # Sunnyvale Residency
        
        # Add flats to Riverside Towers (apartment 5)
        flats_apartment5 = [
            {
                'block': 'A', 
                'flat_number': 'A101', 
                'flat_type': '2BHK', 
                'owner_name': 'John Smith', 
                'owner_contact': '+1-555-101-1010', 
                'owner_email': 'john.smith@example.com', 
                'flat_size': '1200 sqft', 
                'status': 'Occupied', 
                'parking_slots': 1,
                'password': make_password('password123'),
                'role': 'owner'
            },
            {
                'block': 'A', 
                'flat_number': 'A102', 
                'flat_type': '3BHK', 
                'owner_name': 'Emma Johnson', 
                'owner_contact': '+1-555-102-2020', 
                'owner_email': 'emma.johnson@example.com', 
                'flat_size': '1500 sqft', 
                'status': 'Occupied', 
                'parking_slots': 2,
                'password': make_password('password123'),
                'role': 'owner'
            },
            {
                'block': 'B', 
                'flat_number': 'B201', 
                'flat_type': '1BHK', 
                'owner_name': 'Robert Davis', 
                'owner_contact': '+1-555-201-3030', 
                'owner_email': 'robert.davis@example.com', 
                'flat_size': '750 sqft', 
                'status': 'Available', 
                'parking_slots': 1,
                'password': make_password('password123'),
                'role': 'owner'
            },
            {
                'block': 'B', 
                'flat_number': 'B202', 
                'flat_type': '2BHK', 
                'owner_name': 'Sarah Wilson', 
                'owner_contact': '+1-555-202-4040', 
                'owner_email': 'sarah.wilson@example.com', 
                'flat_size': '1100 sqft', 
                'status': 'Maintenance', 
                'parking_slots': 1,
                'password': make_password('password123'),
                'role': 'owner'
            },
        ]
        
        # Add flats to Sunnyvale Residency (apartment 6)
        flats_apartment6 = [
            {
                'block': 'C', 
                'flat_number': 'C301', 
                'flat_type': '3BHK', 
                'owner_name': 'Michael Brown', 
                'owner_contact': '+1-555-301-5050', 
                'owner_email': 'michael.brown@example.com', 
                'flat_size': '1600 sqft', 
                'status': 'Occupied', 
                'parking_slots': 2,
                'password': make_password('password123'),
                'role': 'owner'
            },
            {
                'block': 'C', 
                'flat_number': 'C302', 
                'flat_type': '4BHK', 
                'owner_name': 'Jennifer Lee', 
                'owner_contact': '+1-555-302-6060', 
                'owner_email': 'jennifer.lee@example.com', 
                'flat_size': '2000 sqft', 
                'status': 'Occupied', 
                'parking_slots': 2,
                'password': make_password('password123'),
                'role': 'owner'
            },
            {
                'block': 'D', 
                'flat_number': 'D401', 
                'flat_type': '2BHK', 
                'owner_name': 'David Miller', 
                'owner_contact': '+1-555-401-7070', 
                'owner_email': 'david.miller@example.com', 
                'flat_size': '1250 sqft', 
                'status': 'Available', 
                'parking_slots': 1,
                'password': make_password('password123'),
                'role': 'owner'
            },
            {
                'block': 'D', 
                'flat_number': 'D402', 
                'flat_type': '3BHK', 
                'owner_name': 'Lisa Taylor', 
                'owner_contact': '+1-555-402-8080', 
                'owner_email': 'lisa.taylor@example.com', 
                'flat_size': '1550 sqft', 
                'status': 'Occupied', 
                'parking_slots': 2,
                'password': make_password('password123'),
                'role': 'owner'
            },
        ]
        
        # Create flats for apartment 5
        for flat_data in flats_apartment5:
            ApartmentFlat.objects.create(apartment=apartment5, **flat_data)
        
        # Create flats for apartment 6
        for flat_data in flats_apartment6:
            ApartmentFlat.objects.create(apartment=apartment6, **flat_data)
            
        print(f"Added 4 flats to {apartment5.name} and 4 flats to {apartment6.name}")
        
    except Apartment.DoesNotExist as e:
        print(f"Error: {str(e)}")
    except Exception as e:
        print(f"Error adding flats: {str(e)}")

def remove_added_flats(apps, schema_editor):
    # Get the ApartmentFlat model
    ApartmentFlat = apps.get_model('verify', 'ApartmentFlat')
    
    # Remove all flats from apartments 5 and 6
    flats_removed = ApartmentFlat.objects.filter(apartment_id__in=[5, 6]).delete()
    print(f"Removed flats from apartments 5 and 6")


class Migration(migrations.Migration):

    dependencies = [
        ('verify', '0015_add_coordinates_to_apartments'),
    ]

    operations = [
        migrations.RunPython(add_flats_to_apartments, remove_added_flats),
    ]
